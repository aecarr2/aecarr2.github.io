{"ast":null,"code":"/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nvar setProps = function setProps(_ref) {\n  var _ref$strings = _ref.strings,\n      strings = _ref$strings === void 0 ? ['Put your strings here...', 'and Enjoy!'] : _ref$strings,\n      _ref$typeSpeed = _ref.typeSpeed,\n      typeSpeed = _ref$typeSpeed === void 0 ? 100 : _ref$typeSpeed,\n      _ref$backSpeed = _ref.backSpeed,\n      backSpeed = _ref$backSpeed === void 0 ? 50 : _ref$backSpeed,\n      _ref$backDelay = _ref.backDelay,\n      backDelay = _ref$backDelay === void 0 ? 500 : _ref$backDelay,\n      _ref$startDelay = _ref.startDelay,\n      startDelay = _ref$startDelay === void 0 ? 500 : _ref$startDelay,\n      _ref$cursorChar = _ref.cursorChar,\n      cursorChar = _ref$cursorChar === void 0 ? '|' : _ref$cursorChar,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? false : _ref$placeholder,\n      _ref$showCursor = _ref.showCursor,\n      showCursor = _ref$showCursor === void 0 ? true : _ref$showCursor,\n      _ref$disableBackTypin = _ref.disableBackTyping,\n      disableBackTyping = _ref$disableBackTypin === void 0 ? false : _ref$disableBackTypin,\n      _ref$onFinished = _ref.onFinished,\n      onFinished = _ref$onFinished === void 0 ? function () {} : _ref$onFinished,\n      _ref$loop = _ref.loop,\n      loop = _ref$loop === void 0 ? true : _ref$loop;\n  return {\n    strings: strings,\n    typeSpeed: typeSpeed,\n    backSpeed: backSpeed,\n    cursorChar: cursorChar,\n    backDelay: backDelay,\n    placeholder: placeholder,\n    startDelay: startDelay,\n    showCursor: showCursor,\n    loop: loop,\n    disableBackTyping: disableBackTyping,\n    onFinished: onFinished\n  };\n};\n\nexport var init = function init(element, properties) {\n  var i = 0,\n      l,\n      STRINGS_TO_ITERATE;\n\n  var typewrite = function typewrite(strings, props) {\n    if (i === l) if (props.loop) i = 0;\n    setTimeout(function () {\n      typeString(strings[i], props);\n    }, props.startDelay);\n  };\n\n  var typeString = function typeString(str, props) {\n    var index = 0,\n        strLen = str.length;\n    var intervalID = setInterval(function () {\n      props.placeholder ? element.placeholder += str[index] : element.textContent += str[index];\n      if (++index === strLen) return onStringTyped(intervalID, props);\n    }, props.typeSpeed);\n  };\n\n  var onStringTyped = function onStringTyped(id, props) {\n    clearInterval(id);\n\n    if (props.disableBackTyping && i === l - 1) {\n      return props.onFinished();\n    }\n\n    if (!props.loop && i === l - 1) {\n      return props.onFinished();\n    }\n\n    setTimeout(function () {\n      return eraseString(props);\n    }, props.backDelay);\n  };\n\n  var eraseString = function eraseString(props) {\n    var str = props.placeholder ? element.placeholder : element.textContent,\n        strLen = str.length;\n    var intervalID = setInterval(function () {\n      props.placeholder ? element.placeholder = element.placeholder.substr(0, --strLen) : element.textContent = str.substr(0, --strLen);\n      if (strLen === 0) return onStringErased(intervalID, props);\n    }, props.backSpeed);\n  };\n\n  var onStringErased = function onStringErased(id, props) {\n    clearInterval(id);\n    ++i;\n    typewrite(STRINGS_TO_ITERATE, props);\n  };\n\n  var setCursor = function setCursor(element, props) {\n    var cursorSpan = document.createElement('span');\n    cursorSpan.classList.add('ityped-cursor');\n    cursorSpan.textContent = '|';\n    cursorSpan.textContent = props.cursorChar;\n    element.insertAdjacentElement('afterend', cursorSpan);\n  };\n\n  var startTyping = function startTyping(prop) {\n    var props = setProps(prop || {});\n    var strings = props.strings;\n    STRINGS_TO_ITERATE = strings;\n    l = strings.length;\n    if (typeof element === \"string\") element = document.querySelector(element);\n    if (props.showCursor) setCursor(element, props);\n    typewrite(strings, props);\n  };\n\n  return startTyping(properties);\n};","map":{"version":3,"sources":["/home/aucarr/Projects/aucarr-react/node_modules/ityped/src/index.js"],"names":["setProps","strings","typeSpeed","backSpeed","backDelay","startDelay","cursorChar","placeholder","showCursor","disableBackTyping","onFinished","loop","init","element","properties","i","l","STRINGS_TO_ITERATE","typewrite","props","setTimeout","typeString","str","index","strLen","length","intervalID","setInterval","textContent","onStringTyped","id","clearInterval","eraseString","substr","onStringErased","setCursor","cursorSpan","document","createElement","classList","add","insertAdjacentElement","startTyping","prop","querySelector"],"mappings":"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","sourcesContent":["/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nconst setProps = ({\n  strings = ['Put your strings here...', 'and Enjoy!'],\n  typeSpeed = 100,\n  backSpeed = 50,\n  backDelay = 500,\n  startDelay = 500,\n  cursorChar = '|',\n  placeholder = false,\n  showCursor = true,\n  disableBackTyping = false,\n  onFinished = function () { },\n  loop = true\n}) => ({\n  strings,\n  typeSpeed,\n  backSpeed,\n  cursorChar,\n  backDelay,\n  placeholder,\n  startDelay,\n  showCursor,\n  loop,\n  disableBackTyping,\n  onFinished\n})\n\nexport const init = (element, properties) => {\n  let i = 0, l, STRINGS_TO_ITERATE;\n\n  const typewrite = (strings, props) => {\n    if (i === l)\n      if (props.loop) i = 0;\n    setTimeout(() => { typeString(strings[i], props); }, props.startDelay);\n  }\n\n  const typeString = (str, props) => {\n    let index = 0,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder ? element.placeholder += str[index] : element.textContent += str[index];\n      if (++index === strLen) return onStringTyped(intervalID, props);\n    }, props.typeSpeed);\n  }\n\n  const onStringTyped = (id, props) => {\n    clearInterval(id);\n    if (props.disableBackTyping && i === l - 1) {\n      return props.onFinished()\n    }\n    if (!props.loop && i === l - 1) {\n      return props.onFinished();\n    }\n    setTimeout(() => eraseString(props), props.backDelay);\n  }\n\n  const eraseString = (props) => {\n    let str = props.placeholder ? element.placeholder : element.textContent,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder\n        ? element.placeholder = element.placeholder.substr(0, --strLen)\n        : element.textContent = str.substr(0, --strLen);\n      if (strLen === 0) return onStringErased(intervalID, props);\n    }, props.backSpeed);\n  }\n\n  const onStringErased = (id, props) => {\n    clearInterval(id);\n    ++i;\n    typewrite(STRINGS_TO_ITERATE, props);\n  }\n\n  const setCursor = (element, props) => {\n    let cursorSpan = document.createElement('span');\n    cursorSpan.classList.add('ityped-cursor');\n    cursorSpan.textContent = '|';\n    cursorSpan.textContent = props.cursorChar;\n    element.insertAdjacentElement('afterend', cursorSpan);\n  }\n\n\n  const startTyping = (prop) => {\n    let props = setProps(prop || {})\n    let strings = props.strings\n    STRINGS_TO_ITERATE = strings\n    l = strings.length\n    if (typeof element === \"string\") element = document.querySelector(element)\n    if (props.showCursor) setCursor(element, props)\n    typewrite(strings, props)\n  }\n\n  return startTyping(properties)\n}"]},"metadata":{},"sourceType":"module"}